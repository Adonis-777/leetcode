class Solution {
public:
    int findMin(vector<int>& a) {
        int n = a.size();
        int ans = 0;

//if already sorted
        if(a[0] <= a[n - 1]){
            ans = a[0];
        }
// if the array is not sorted then the logic says mid element should be bigger than the last element whenever we get a smaller element we just make it as mid and finally the right most element used in binary search is the smallest element
        else{
            int l = 0, r = n - 1;

            while(l < r){
                int mid = l + (r - l) / 2;
                if(a[mid] > a[r]){
                    l = mid + 1;
                }
                else{
                    r = mid;
                }
            }
            ans = a[r];
        }

        return ans;

    }

};
